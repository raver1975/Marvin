plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()

}

import com.github.jengelman.gradle.plugins.shadow.relocation.*
import com.github.jengelman.gradle.plugins.shadow.transformers.*

class WindowsTransformer extends ServiceFileTransformer {

    @Override
    void transform(TransformerContext tc) {
        def lines = tc.is.readLines()

        tc.relocators.each {rel ->
            if (rel.canRelocateClass(new File(path).name as RelocateClassContext)) {
                path = rel.relocateClass(path as RelocateClassContext)
            }
            lines.eachWithIndex { String line, int i ->
                if (rel.canRelocateClass(line as RelocateClassContext)) {
                    lines[i] = rel.relocateClass(line as RelocateClassContext)
                }
            }
        }

        lines.each { line -> serviceEntries[path]
                .append(new ByteArrayInputStream((line + "\r\n").getBytes()))
        }
    }
}

shadowJar {
//    mergeServiceFiles() - should not be used, as it uses default transformer
    transform(WindowsTransformer.class)
}

jar {
    manifest {
        attributes 'Main-Class': 'com.klemstinegroup.Marvin'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.bytedeco', name: 'javacv-platform', version: '1.5.2'
}
